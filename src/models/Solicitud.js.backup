import db from '../database.js';

export class Solicitud {
  static crear(datos) {
    const { usuario_id, tipo, titulo, descripcion, prioridad } = datos;
    
    const stmt = db.prepare(`
      INSERT INTO solicitudes (usuario_id, tipo, titulo, descripcion, prioridad)
      VALUES (?, ?, ?, ?, ?)
    `);
    
    const result = stmt.run(usuario_id, tipo, titulo, descripcion, prioridad || 'media');
    return this.obtenerPorId(result.lastInsertRowid);
  }

  static obtenerTodas() {
    const stmt = db.prepare(`
      SELECT s.*, u.nombre as usuario_nombre, u.departamento
      FROM solicitudes s
      JOIN usuarios u ON s.usuario_id = u.id
      ORDER BY 
        CASE s.prioridad 
          WHEN 'urgente' THEN 1
          WHEN 'alta' THEN 2
          WHEN 'media' THEN 3
          ELSE 4
        END,
        s.created_at DESC
    `);
    return stmt.all();
  }

  static obtenerPorUsuario(usuarioId) {
    const stmt = db.prepare(`
      SELECT * FROM solicitudes 
      WHERE usuario_id = ? 
      ORDER BY created_at DESC
    `);
    return stmt.all(usuarioId);
  }

  static obtenerPorId(id) {
    const stmt = db.prepare(`
      SELECT s.*, u.nombre as usuario_nombre, u.departamento, u.telefono
      FROM solicitudes s
      JOIN usuarios u ON s.usuario_id = u.id
      WHERE s.id = ?
    `);
    return stmt.get(id);
  }

  static responder(id, respuesta, nuevoEstado = 'completada') {
    const stmt = db.prepare(`
      UPDATE solicitudes 
      SET respuesta = ?, estado = ?, fecha_respuesta = CURRENT_TIMESTAMP
      WHERE id = ?
    `);
    
    return stmt.run(respuesta, nuevoEstado, id);
  }

  static cambiarEstado(id, estado) {
    const stmt = db.prepare('UPDATE solicitudes SET estado = ? WHERE id = ?');
    return stmt.run(estado, id);
  }

  static obtenerPorEstado(estado) {
    const stmt = db.prepare(`
      SELECT s.*, u.nombre as usuario_nombre, u.departamento
      FROM solicitudes s
      JOIN usuarios u ON s.usuario_id = u.id
      WHERE s.estado = ?
      ORDER BY s.created_at DESC
    `);
    return stmt.all(estado);
  }

  static obtenerEstadisticas() {
    const stmt = db.prepare(`
      SELECT 
        estado,
        COUNT(*) as cantidad
      FROM solicitudes
      GROUP BY estado
    `);
    return stmt.all();
  }

  static eliminar(id) {
    const stmt = db.prepare('DELETE FROM solicitudes WHERE id = ?');
    return stmt.run(id);
  }
}