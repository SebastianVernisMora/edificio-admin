import { AilogwVoiceProvider } from "../AilogwVoiceProvider";
import type { GetAgentResponseModel } from "@elevenlabs/elevenlabs-js/api";
import type { AilogwTypes, PrepareCallContext } from "../../";
/**
 * ElevenLabs voice provider implementation for Ailogw.
 * Handles outbound voice calls using ElevenLabs Agent Platform with Twilio integration.
 */
export declare class ElevenLabsVoiceProvider extends AilogwVoiceProvider {
    private client;
    private agents;
    constructor(config: Omit<AilogwTypes.VoiceProvider, "provider">);
    /** here we declare a method to fetch the pre-configured agents from eleven labs,
     * the response will be later cached (in prepareCall method) for this class instance
     * @throws `AilogwException` - if we failed to get a response
    */
    fetchAgents(): Promise<{
        alert: GetAgentResponseModel;
        github: GetAgentResponseModel;
    }>;
    /**
     * Prepares a voice call with the provided alert message and target number.
     * Returns a function that can be called to execute the prepared call.
     *
     * @param alertMessage - The alert message to be spoken during the call
     * @param toNumber - The phone number to call (should include country code)
     * @param context - Optional context information to provide to the agent. If provided, the agent will be informed that this is all available information.
     * @returns Function that executes the prepared call
     */
    prepareCall(alertMessage: string, toNumber: string, context: PrepareCallContext): Promise<() => Promise<{
        success: boolean;
        callId?: string;
        message?: string;
        error?: string;
    }>>;
}
